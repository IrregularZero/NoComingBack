//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.4.4
//     from Assets/InputMaps/PlayerInputs.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @PlayerInputs : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @PlayerInputs()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlayerInputs"",
    ""maps"": [
        {
            ""name"": ""OnFoot"",
            ""id"": ""c66c21ec-826b-4a69-9f51-75dfdbec31bd"",
            ""actions"": [
                {
                    ""name"": ""Look"",
                    ""type"": ""Value"",
                    ""id"": ""c3958b36-abd1-49ce-a9e4-7de186f82f12"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Movement"",
                    ""type"": ""Value"",
                    ""id"": ""e0436f3b-6e2d-4726-9e55-00ee1f44d591"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Jump"",
                    ""type"": ""Button"",
                    ""id"": ""fc0dc1ae-5f24-425a-81ba-9233f6947457"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""KnockDown"",
                    ""type"": ""Button"",
                    ""id"": ""a8aca297-a051-40a9-8992-eda6dd025cb0"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Hold(duration=0.25,pressPoint=0.3)"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""CrouchHold"",
                    ""type"": ""Button"",
                    ""id"": ""df773509-3251-4b54-9123-402d6f47c4e1"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Slide"",
                    ""type"": ""Button"",
                    ""id"": ""39dc8722-e7ba-40ea-abdc-f2dfd8a017c5"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Interact"",
                    ""type"": ""Button"",
                    ""id"": ""39890f6e-ce7f-4141-bcf8-f4712c552491"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""WASD [Keyboard]"",
                    ""id"": ""2725ae85-2979-45dd-86ae-bb1934fc11a9"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""cbdfd058-3443-43d3-a75d-873117fe3b6d"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""5ee39ef5-6b6c-4269-855e-1b22589ab915"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""9f952d87-f622-4d64-96cb-80f023c46261"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""042b6df5-35a3-4bc3-92b4-633221455171"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""7f093ba1-79aa-4e59-b1a7-0c8e2c377d94"",
                    ""path"": ""<Gamepad>/leftStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b8d92b81-6cec-4aaf-a261-485ec71278fd"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""dd57dd09-d089-4b7c-9081-cb438efb2439"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c4ea4d79-fcc5-4767-8602-3ac2fe468126"",
                    ""path"": ""<Mouse>/delta"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Look"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9bd6f6fa-7b5c-4967-9b44-b4da97f67c3b"",
                    ""path"": ""<Gamepad>/rightStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Look"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""29d789bf-6183-4bd6-9ca5-d5048e77e82f"",
                    ""path"": ""<Keyboard>/c"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Slide"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""17b44ee4-db01-459f-98fc-de065fd1d558"",
                    ""path"": ""<Keyboard>/leftCtrl"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CrouchHold"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4ad6e57c-34b8-43a6-81e6-0677df998753"",
                    ""path"": ""<Gamepad>/leftShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CrouchHold"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""26ed5e96-6545-4606-87e7-4d222e2405f9"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""KnockDown"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d238d9a5-9a5d-44a1-aad9-824071c0015d"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""KnockDown"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d69a62db-c1e5-4ab6-a385-9d86aa5aadf8"",
                    ""path"": ""<Keyboard>/f"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Interact"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ea166690-0c04-4932-94cc-795d08d8169c"",
                    ""path"": ""<Gamepad>/buttonWest"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Interact"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Gun"",
            ""id"": ""56a2bb1f-f5e1-4808-9edc-863db5075cdc"",
            ""actions"": [
                {
                    ""name"": ""Fire"",
                    ""type"": ""Button"",
                    ""id"": ""898ee14d-704e-4d11-9b2e-fb5a4cced3d8"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SpecialFire"",
                    ""type"": ""Button"",
                    ""id"": ""0ece401c-14ef-4ad9-9481-6a6263e3ac0d"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Reload"",
                    ""type"": ""Button"",
                    ""id"": ""0cb91ce4-dfdc-4660-b4a0-5c6515351637"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Overview"",
                    ""type"": ""Button"",
                    ""id"": ""bd9c045b-1e57-4b86-8462-3984f9fe058a"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""86edc249-389f-4dce-97bb-fa0f7fb69f6a"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Fire"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""dfdd92ec-0bdf-4019-bc63-3aae8772b305"",
                    ""path"": ""<Keyboard>/r"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Reload"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0a3d4d5b-9130-42cf-be03-1390f9869814"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SpecialFire"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""81e5a9c7-dbe7-4ec3-a674-e43d3e8d9403"",
                    ""path"": ""<Keyboard>/t"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Overview"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""ItemManipulation"",
            ""id"": ""e359587c-f46c-42ac-bc57-91d6604c65c6"",
            ""actions"": [
                {
                    ""name"": ""NorthSlot"",
                    ""type"": ""Button"",
                    ""id"": ""be926777-73e7-41a3-8103-3225cfbc05d2"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""EastSlot"",
                    ""type"": ""Button"",
                    ""id"": ""07cb20b7-553e-4189-872c-716960739cd3"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""WestSlot"",
                    ""type"": ""Button"",
                    ""id"": ""9b106e56-59c3-4cc2-a23c-2add2a50f9f4"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SouthSlot"",
                    ""type"": ""Button"",
                    ""id"": ""ae4ba343-1da0-4408-a4e6-8fabfaf6ac48"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""915339d2-31fa-4dfe-9725-ef18b30286c2"",
                    ""path"": ""<Keyboard>/1"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""NorthSlot"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""76eb3f59-47c4-49a3-9c46-7e5be001ef17"",
                    ""path"": ""<Gamepad>/dpad/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""NorthSlot"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ee5d8610-2688-4a79-b01e-b22c15394878"",
                    ""path"": ""<Keyboard>/2"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""EastSlot"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""689b500a-ed77-435a-b5b2-92bf6db8a463"",
                    ""path"": ""<Gamepad>/dpad/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""EastSlot"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3c9ca54c-fafc-4620-b627-4821d668a4d8"",
                    ""path"": ""<Keyboard>/4"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SouthSlot"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""76d43253-c69b-4e58-a6d9-98d8441696ae"",
                    ""path"": ""<Gamepad>/dpad/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SouthSlot"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""544bff7a-788b-4e6a-85dc-edb1dd285ef4"",
                    ""path"": ""<Keyboard>/3"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""WestSlot"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4cb77d0d-b9e7-4d50-8bdd-65f333617a10"",
                    ""path"": ""<Gamepad>/dpad/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""WestSlot"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // OnFoot
        m_OnFoot = asset.FindActionMap("OnFoot", throwIfNotFound: true);
        m_OnFoot_Look = m_OnFoot.FindAction("Look", throwIfNotFound: true);
        m_OnFoot_Movement = m_OnFoot.FindAction("Movement", throwIfNotFound: true);
        m_OnFoot_Jump = m_OnFoot.FindAction("Jump", throwIfNotFound: true);
        m_OnFoot_KnockDown = m_OnFoot.FindAction("KnockDown", throwIfNotFound: true);
        m_OnFoot_CrouchHold = m_OnFoot.FindAction("CrouchHold", throwIfNotFound: true);
        m_OnFoot_Slide = m_OnFoot.FindAction("Slide", throwIfNotFound: true);
        m_OnFoot_Interact = m_OnFoot.FindAction("Interact", throwIfNotFound: true);
        // Gun
        m_Gun = asset.FindActionMap("Gun", throwIfNotFound: true);
        m_Gun_Fire = m_Gun.FindAction("Fire", throwIfNotFound: true);
        m_Gun_SpecialFire = m_Gun.FindAction("SpecialFire", throwIfNotFound: true);
        m_Gun_Reload = m_Gun.FindAction("Reload", throwIfNotFound: true);
        m_Gun_Overview = m_Gun.FindAction("Overview", throwIfNotFound: true);
        // ItemManipulation
        m_ItemManipulation = asset.FindActionMap("ItemManipulation", throwIfNotFound: true);
        m_ItemManipulation_NorthSlot = m_ItemManipulation.FindAction("NorthSlot", throwIfNotFound: true);
        m_ItemManipulation_EastSlot = m_ItemManipulation.FindAction("EastSlot", throwIfNotFound: true);
        m_ItemManipulation_WestSlot = m_ItemManipulation.FindAction("WestSlot", throwIfNotFound: true);
        m_ItemManipulation_SouthSlot = m_ItemManipulation.FindAction("SouthSlot", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // OnFoot
    private readonly InputActionMap m_OnFoot;
    private IOnFootActions m_OnFootActionsCallbackInterface;
    private readonly InputAction m_OnFoot_Look;
    private readonly InputAction m_OnFoot_Movement;
    private readonly InputAction m_OnFoot_Jump;
    private readonly InputAction m_OnFoot_KnockDown;
    private readonly InputAction m_OnFoot_CrouchHold;
    private readonly InputAction m_OnFoot_Slide;
    private readonly InputAction m_OnFoot_Interact;
    public struct OnFootActions
    {
        private @PlayerInputs m_Wrapper;
        public OnFootActions(@PlayerInputs wrapper) { m_Wrapper = wrapper; }
        public InputAction @Look => m_Wrapper.m_OnFoot_Look;
        public InputAction @Movement => m_Wrapper.m_OnFoot_Movement;
        public InputAction @Jump => m_Wrapper.m_OnFoot_Jump;
        public InputAction @KnockDown => m_Wrapper.m_OnFoot_KnockDown;
        public InputAction @CrouchHold => m_Wrapper.m_OnFoot_CrouchHold;
        public InputAction @Slide => m_Wrapper.m_OnFoot_Slide;
        public InputAction @Interact => m_Wrapper.m_OnFoot_Interact;
        public InputActionMap Get() { return m_Wrapper.m_OnFoot; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(OnFootActions set) { return set.Get(); }
        public void SetCallbacks(IOnFootActions instance)
        {
            if (m_Wrapper.m_OnFootActionsCallbackInterface != null)
            {
                @Look.started -= m_Wrapper.m_OnFootActionsCallbackInterface.OnLook;
                @Look.performed -= m_Wrapper.m_OnFootActionsCallbackInterface.OnLook;
                @Look.canceled -= m_Wrapper.m_OnFootActionsCallbackInterface.OnLook;
                @Movement.started -= m_Wrapper.m_OnFootActionsCallbackInterface.OnMovement;
                @Movement.performed -= m_Wrapper.m_OnFootActionsCallbackInterface.OnMovement;
                @Movement.canceled -= m_Wrapper.m_OnFootActionsCallbackInterface.OnMovement;
                @Jump.started -= m_Wrapper.m_OnFootActionsCallbackInterface.OnJump;
                @Jump.performed -= m_Wrapper.m_OnFootActionsCallbackInterface.OnJump;
                @Jump.canceled -= m_Wrapper.m_OnFootActionsCallbackInterface.OnJump;
                @KnockDown.started -= m_Wrapper.m_OnFootActionsCallbackInterface.OnKnockDown;
                @KnockDown.performed -= m_Wrapper.m_OnFootActionsCallbackInterface.OnKnockDown;
                @KnockDown.canceled -= m_Wrapper.m_OnFootActionsCallbackInterface.OnKnockDown;
                @CrouchHold.started -= m_Wrapper.m_OnFootActionsCallbackInterface.OnCrouchHold;
                @CrouchHold.performed -= m_Wrapper.m_OnFootActionsCallbackInterface.OnCrouchHold;
                @CrouchHold.canceled -= m_Wrapper.m_OnFootActionsCallbackInterface.OnCrouchHold;
                @Slide.started -= m_Wrapper.m_OnFootActionsCallbackInterface.OnSlide;
                @Slide.performed -= m_Wrapper.m_OnFootActionsCallbackInterface.OnSlide;
                @Slide.canceled -= m_Wrapper.m_OnFootActionsCallbackInterface.OnSlide;
                @Interact.started -= m_Wrapper.m_OnFootActionsCallbackInterface.OnInteract;
                @Interact.performed -= m_Wrapper.m_OnFootActionsCallbackInterface.OnInteract;
                @Interact.canceled -= m_Wrapper.m_OnFootActionsCallbackInterface.OnInteract;
            }
            m_Wrapper.m_OnFootActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Look.started += instance.OnLook;
                @Look.performed += instance.OnLook;
                @Look.canceled += instance.OnLook;
                @Movement.started += instance.OnMovement;
                @Movement.performed += instance.OnMovement;
                @Movement.canceled += instance.OnMovement;
                @Jump.started += instance.OnJump;
                @Jump.performed += instance.OnJump;
                @Jump.canceled += instance.OnJump;
                @KnockDown.started += instance.OnKnockDown;
                @KnockDown.performed += instance.OnKnockDown;
                @KnockDown.canceled += instance.OnKnockDown;
                @CrouchHold.started += instance.OnCrouchHold;
                @CrouchHold.performed += instance.OnCrouchHold;
                @CrouchHold.canceled += instance.OnCrouchHold;
                @Slide.started += instance.OnSlide;
                @Slide.performed += instance.OnSlide;
                @Slide.canceled += instance.OnSlide;
                @Interact.started += instance.OnInteract;
                @Interact.performed += instance.OnInteract;
                @Interact.canceled += instance.OnInteract;
            }
        }
    }
    public OnFootActions @OnFoot => new OnFootActions(this);

    // Gun
    private readonly InputActionMap m_Gun;
    private IGunActions m_GunActionsCallbackInterface;
    private readonly InputAction m_Gun_Fire;
    private readonly InputAction m_Gun_SpecialFire;
    private readonly InputAction m_Gun_Reload;
    private readonly InputAction m_Gun_Overview;
    public struct GunActions
    {
        private @PlayerInputs m_Wrapper;
        public GunActions(@PlayerInputs wrapper) { m_Wrapper = wrapper; }
        public InputAction @Fire => m_Wrapper.m_Gun_Fire;
        public InputAction @SpecialFire => m_Wrapper.m_Gun_SpecialFire;
        public InputAction @Reload => m_Wrapper.m_Gun_Reload;
        public InputAction @Overview => m_Wrapper.m_Gun_Overview;
        public InputActionMap Get() { return m_Wrapper.m_Gun; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(GunActions set) { return set.Get(); }
        public void SetCallbacks(IGunActions instance)
        {
            if (m_Wrapper.m_GunActionsCallbackInterface != null)
            {
                @Fire.started -= m_Wrapper.m_GunActionsCallbackInterface.OnFire;
                @Fire.performed -= m_Wrapper.m_GunActionsCallbackInterface.OnFire;
                @Fire.canceled -= m_Wrapper.m_GunActionsCallbackInterface.OnFire;
                @SpecialFire.started -= m_Wrapper.m_GunActionsCallbackInterface.OnSpecialFire;
                @SpecialFire.performed -= m_Wrapper.m_GunActionsCallbackInterface.OnSpecialFire;
                @SpecialFire.canceled -= m_Wrapper.m_GunActionsCallbackInterface.OnSpecialFire;
                @Reload.started -= m_Wrapper.m_GunActionsCallbackInterface.OnReload;
                @Reload.performed -= m_Wrapper.m_GunActionsCallbackInterface.OnReload;
                @Reload.canceled -= m_Wrapper.m_GunActionsCallbackInterface.OnReload;
                @Overview.started -= m_Wrapper.m_GunActionsCallbackInterface.OnOverview;
                @Overview.performed -= m_Wrapper.m_GunActionsCallbackInterface.OnOverview;
                @Overview.canceled -= m_Wrapper.m_GunActionsCallbackInterface.OnOverview;
            }
            m_Wrapper.m_GunActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Fire.started += instance.OnFire;
                @Fire.performed += instance.OnFire;
                @Fire.canceled += instance.OnFire;
                @SpecialFire.started += instance.OnSpecialFire;
                @SpecialFire.performed += instance.OnSpecialFire;
                @SpecialFire.canceled += instance.OnSpecialFire;
                @Reload.started += instance.OnReload;
                @Reload.performed += instance.OnReload;
                @Reload.canceled += instance.OnReload;
                @Overview.started += instance.OnOverview;
                @Overview.performed += instance.OnOverview;
                @Overview.canceled += instance.OnOverview;
            }
        }
    }
    public GunActions @Gun => new GunActions(this);

    // ItemManipulation
    private readonly InputActionMap m_ItemManipulation;
    private IItemManipulationActions m_ItemManipulationActionsCallbackInterface;
    private readonly InputAction m_ItemManipulation_NorthSlot;
    private readonly InputAction m_ItemManipulation_EastSlot;
    private readonly InputAction m_ItemManipulation_WestSlot;
    private readonly InputAction m_ItemManipulation_SouthSlot;
    public struct ItemManipulationActions
    {
        private @PlayerInputs m_Wrapper;
        public ItemManipulationActions(@PlayerInputs wrapper) { m_Wrapper = wrapper; }
        public InputAction @NorthSlot => m_Wrapper.m_ItemManipulation_NorthSlot;
        public InputAction @EastSlot => m_Wrapper.m_ItemManipulation_EastSlot;
        public InputAction @WestSlot => m_Wrapper.m_ItemManipulation_WestSlot;
        public InputAction @SouthSlot => m_Wrapper.m_ItemManipulation_SouthSlot;
        public InputActionMap Get() { return m_Wrapper.m_ItemManipulation; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(ItemManipulationActions set) { return set.Get(); }
        public void SetCallbacks(IItemManipulationActions instance)
        {
            if (m_Wrapper.m_ItemManipulationActionsCallbackInterface != null)
            {
                @NorthSlot.started -= m_Wrapper.m_ItemManipulationActionsCallbackInterface.OnNorthSlot;
                @NorthSlot.performed -= m_Wrapper.m_ItemManipulationActionsCallbackInterface.OnNorthSlot;
                @NorthSlot.canceled -= m_Wrapper.m_ItemManipulationActionsCallbackInterface.OnNorthSlot;
                @EastSlot.started -= m_Wrapper.m_ItemManipulationActionsCallbackInterface.OnEastSlot;
                @EastSlot.performed -= m_Wrapper.m_ItemManipulationActionsCallbackInterface.OnEastSlot;
                @EastSlot.canceled -= m_Wrapper.m_ItemManipulationActionsCallbackInterface.OnEastSlot;
                @WestSlot.started -= m_Wrapper.m_ItemManipulationActionsCallbackInterface.OnWestSlot;
                @WestSlot.performed -= m_Wrapper.m_ItemManipulationActionsCallbackInterface.OnWestSlot;
                @WestSlot.canceled -= m_Wrapper.m_ItemManipulationActionsCallbackInterface.OnWestSlot;
                @SouthSlot.started -= m_Wrapper.m_ItemManipulationActionsCallbackInterface.OnSouthSlot;
                @SouthSlot.performed -= m_Wrapper.m_ItemManipulationActionsCallbackInterface.OnSouthSlot;
                @SouthSlot.canceled -= m_Wrapper.m_ItemManipulationActionsCallbackInterface.OnSouthSlot;
            }
            m_Wrapper.m_ItemManipulationActionsCallbackInterface = instance;
            if (instance != null)
            {
                @NorthSlot.started += instance.OnNorthSlot;
                @NorthSlot.performed += instance.OnNorthSlot;
                @NorthSlot.canceled += instance.OnNorthSlot;
                @EastSlot.started += instance.OnEastSlot;
                @EastSlot.performed += instance.OnEastSlot;
                @EastSlot.canceled += instance.OnEastSlot;
                @WestSlot.started += instance.OnWestSlot;
                @WestSlot.performed += instance.OnWestSlot;
                @WestSlot.canceled += instance.OnWestSlot;
                @SouthSlot.started += instance.OnSouthSlot;
                @SouthSlot.performed += instance.OnSouthSlot;
                @SouthSlot.canceled += instance.OnSouthSlot;
            }
        }
    }
    public ItemManipulationActions @ItemManipulation => new ItemManipulationActions(this);
    public interface IOnFootActions
    {
        void OnLook(InputAction.CallbackContext context);
        void OnMovement(InputAction.CallbackContext context);
        void OnJump(InputAction.CallbackContext context);
        void OnKnockDown(InputAction.CallbackContext context);
        void OnCrouchHold(InputAction.CallbackContext context);
        void OnSlide(InputAction.CallbackContext context);
        void OnInteract(InputAction.CallbackContext context);
    }
    public interface IGunActions
    {
        void OnFire(InputAction.CallbackContext context);
        void OnSpecialFire(InputAction.CallbackContext context);
        void OnReload(InputAction.CallbackContext context);
        void OnOverview(InputAction.CallbackContext context);
    }
    public interface IItemManipulationActions
    {
        void OnNorthSlot(InputAction.CallbackContext context);
        void OnEastSlot(InputAction.CallbackContext context);
        void OnWestSlot(InputAction.CallbackContext context);
        void OnSouthSlot(InputAction.CallbackContext context);
    }
}
