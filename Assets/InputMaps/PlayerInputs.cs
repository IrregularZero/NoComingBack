//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.4.4
//     from Assets/InputMaps/PlayerInputs.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @PlayerInputs : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @PlayerInputs()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlayerInputs"",
    ""maps"": [
        {
            ""name"": ""OnFoot"",
            ""id"": ""c66c21ec-826b-4a69-9f51-75dfdbec31bd"",
            ""actions"": [
                {
                    ""name"": ""Look"",
                    ""type"": ""Value"",
                    ""id"": ""c3958b36-abd1-49ce-a9e4-7de186f82f12"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Movement"",
                    ""type"": ""Value"",
                    ""id"": ""e0436f3b-6e2d-4726-9e55-00ee1f44d591"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Jump"",
                    ""type"": ""Button"",
                    ""id"": ""fc0dc1ae-5f24-425a-81ba-9233f6947457"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""KnockDown"",
                    ""type"": ""Button"",
                    ""id"": ""a8aca297-a051-40a9-8992-eda6dd025cb0"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Hold(duration=0.25,pressPoint=0.3)"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""CrouchHold"",
                    ""type"": ""Button"",
                    ""id"": ""df773509-3251-4b54-9123-402d6f47c4e1"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Slide"",
                    ""type"": ""Button"",
                    ""id"": ""39dc8722-e7ba-40ea-abdc-f2dfd8a017c5"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Interact"",
                    ""type"": ""Button"",
                    ""id"": ""39890f6e-ce7f-4141-bcf8-f4712c552491"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Melee"",
                    ""type"": ""Button"",
                    ""id"": ""93aa09b5-f7c8-49ae-ab56-d8ef92a10628"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ActivateUltimate"",
                    ""type"": ""Button"",
                    ""id"": ""c9b79b9f-c4d7-4213-9a39-80ea24c4b7b9"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""WASD [Keyboard]"",
                    ""id"": ""2725ae85-2979-45dd-86ae-bb1934fc11a9"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""cbdfd058-3443-43d3-a75d-873117fe3b6d"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""5ee39ef5-6b6c-4269-855e-1b22589ab915"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""9f952d87-f622-4d64-96cb-80f023c46261"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""042b6df5-35a3-4bc3-92b4-633221455171"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""7f093ba1-79aa-4e59-b1a7-0c8e2c377d94"",
                    ""path"": ""<Gamepad>/leftStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b8d92b81-6cec-4aaf-a261-485ec71278fd"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""dd57dd09-d089-4b7c-9081-cb438efb2439"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c4ea4d79-fcc5-4767-8602-3ac2fe468126"",
                    ""path"": ""<Mouse>/delta"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Look"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9bd6f6fa-7b5c-4967-9b44-b4da97f67c3b"",
                    ""path"": ""<Gamepad>/rightStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Look"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""29d789bf-6183-4bd6-9ca5-d5048e77e82f"",
                    ""path"": ""<Keyboard>/c"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Slide"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""17b44ee4-db01-459f-98fc-de065fd1d558"",
                    ""path"": ""<Keyboard>/leftCtrl"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CrouchHold"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4ad6e57c-34b8-43a6-81e6-0677df998753"",
                    ""path"": ""<Gamepad>/leftShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CrouchHold"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""26ed5e96-6545-4606-87e7-4d222e2405f9"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""KnockDown"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d238d9a5-9a5d-44a1-aad9-824071c0015d"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""KnockDown"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d69a62db-c1e5-4ab6-a385-9d86aa5aadf8"",
                    ""path"": ""<Keyboard>/f"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Interact"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ea166690-0c04-4932-94cc-795d08d8169c"",
                    ""path"": ""<Gamepad>/buttonWest"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Interact"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e1cd5e4f-4cc4-4386-9b5c-2ee5ff8f6b49"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Melee"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b8fa00e6-4068-46af-8c18-bab384631d61"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ActivateUltimate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""UltimateMode"",
            ""id"": ""a4d427be-9d29-4106-8a5e-06fc3b7a2bc2"",
            ""actions"": [
                {
                    ""name"": ""Movement"",
                    ""type"": ""Value"",
                    ""id"": ""6ff40906-a813-40e9-b588-b419c9d05de7"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Look"",
                    ""type"": ""Value"",
                    ""id"": ""f8e90939-7a5e-4fa5-b80a-36d90dfc980d"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Jump"",
                    ""type"": ""Button"",
                    ""id"": ""5a9c3b3f-9914-4359-8dfc-bdbfa450b37f"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""KnockDown"",
                    ""type"": ""Button"",
                    ""id"": ""72f42f24-819f-4cec-b199-1283cf15ffdd"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Hold(duration=0.25,pressPoint=0.3)"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Slide"",
                    ""type"": ""Button"",
                    ""id"": ""b2ffa56d-eae0-411c-aa3f-1b86e45bd580"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""CrouchHold"",
                    ""type"": ""Button"",
                    ""id"": ""26aeef57-9b64-4a5c-b580-e1e7e200d90c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""DectivateUltimate"",
                    ""type"": ""Button"",
                    ""id"": ""57902700-1464-406f-992e-2d5923cf6c6a"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""HorizontalHit"",
                    ""type"": ""Button"",
                    ""id"": ""41e06181-87d2-4372-88b2-4c98f74e3802"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""VerticalHit"",
                    ""type"": ""Button"",
                    ""id"": ""411df372-f27d-47de-890f-aa637d64d017"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ShieldUp"",
                    ""type"": ""Button"",
                    ""id"": ""f7d8e68d-8e42-41bd-bd4a-1d48852f478f"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""95442394-3a50-497f-9d42-969a874c0c90"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""DectivateUltimate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""981c5650-64d4-4457-bb85-5c4057bbb9d5"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""KnockDown"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b29c7c0f-2fc2-416a-92c1-ee349463da9b"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""KnockDown"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b84eeccf-f799-4876-bf2e-d718b02c8448"",
                    ""path"": ""<Keyboard>/c"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Slide"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""826e132a-4c33-4727-a851-e6cd039cb132"",
                    ""path"": ""<Keyboard>/leftCtrl"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CrouchHold"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7d8eb5a6-ce8f-4746-806e-de60321d7257"",
                    ""path"": ""<Gamepad>/leftShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CrouchHold"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""035fbc21-54a7-407f-a476-0baf6438af12"",
                    ""path"": ""<Mouse>/delta"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Look"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a59054de-85a9-4763-aeb1-6c808376afee"",
                    ""path"": ""<Gamepad>/rightStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Look"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""WASD [Keyboard]"",
                    ""id"": ""85116091-6f16-4380-81ba-8b720fe603da"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""74a9231a-5019-465b-bf14-f573cbf38cac"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""2f0b9054-28b2-4758-ac5b-0c4360c03e36"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""c483cb8b-b86d-4a8a-b9cf-450413755045"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""f7927ecf-19a1-4c2b-86af-a5b69c468041"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""51aa8f77-0b22-4378-bd35-dee6f544faea"",
                    ""path"": ""<Gamepad>/leftStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7956d3f4-f505-45f9-8164-545fc8cd4581"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3beb4437-a363-47af-bd34-096652c36f78"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b42891e2-04ca-4e36-9585-2e7776e26239"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""HorizontalHit"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b3d9c586-e551-47e4-ad16-ba64424269b8"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""VerticalHit"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""fabccc39-aa7d-4960-8568-d864319def6c"",
                    ""path"": ""<Keyboard>/leftShift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ShieldUp"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Gun"",
            ""id"": ""56a2bb1f-f5e1-4808-9edc-863db5075cdc"",
            ""actions"": [
                {
                    ""name"": ""Fire"",
                    ""type"": ""Button"",
                    ""id"": ""898ee14d-704e-4d11-9b2e-fb5a4cced3d8"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SpecialFire"",
                    ""type"": ""Button"",
                    ""id"": ""0ece401c-14ef-4ad9-9481-6a6263e3ac0d"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Reload"",
                    ""type"": ""Button"",
                    ""id"": ""0cb91ce4-dfdc-4660-b4a0-5c6515351637"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Overview"",
                    ""type"": ""Button"",
                    ""id"": ""bd9c045b-1e57-4b86-8462-3984f9fe058a"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""86edc249-389f-4dce-97bb-fa0f7fb69f6a"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Fire"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""dfdd92ec-0bdf-4019-bc63-3aae8772b305"",
                    ""path"": ""<Keyboard>/r"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Reload"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0a3d4d5b-9130-42cf-be03-1390f9869814"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SpecialFire"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""81e5a9c7-dbe7-4ec3-a674-e43d3e8d9403"",
                    ""path"": ""<Keyboard>/t"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Overview"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""ItemManipulation"",
            ""id"": ""e359587c-f46c-42ac-bc57-91d6604c65c6"",
            ""actions"": [
                {
                    ""name"": ""NorthSlot"",
                    ""type"": ""Button"",
                    ""id"": ""be926777-73e7-41a3-8103-3225cfbc05d2"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""NorthSlotAsignment"",
                    ""type"": ""Button"",
                    ""id"": ""f60cb24f-d9ec-47d8-af39-4569fefa6c1a"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""EastSlot"",
                    ""type"": ""Button"",
                    ""id"": ""07cb20b7-553e-4189-872c-716960739cd3"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""EastSlotAsignment"",
                    ""type"": ""Button"",
                    ""id"": ""b0dcf001-c9ef-43ed-850a-944bc95e5397"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""WestSlot"",
                    ""type"": ""Button"",
                    ""id"": ""9b106e56-59c3-4cc2-a23c-2add2a50f9f4"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""WestSlotAsignment"",
                    ""type"": ""Button"",
                    ""id"": ""a1b506ce-a1f7-43e3-8390-08f5f43c97be"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SouthSlot"",
                    ""type"": ""Button"",
                    ""id"": ""ae4ba343-1da0-4408-a4e6-8fabfaf6ac48"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SouthSlotAsignment"",
                    ""type"": ""Button"",
                    ""id"": ""3bb4785d-bae4-4e1d-a791-47ee96ea84e3"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Inventory"",
                    ""type"": ""Button"",
                    ""id"": ""22c9ac06-5e38-4c99-b64b-7fe12be00cc7"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Use_InInventory"",
                    ""type"": ""Button"",
                    ""id"": ""46338af4-f8e8-48f9-a01e-626cf26fa0c4"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Remove_InInventory"",
                    ""type"": ""Button"",
                    ""id"": ""beed2dbd-09b7-43ea-a822-e7fc4a1da39b"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Swap_InInventory"",
                    ""type"": ""Button"",
                    ""id"": ""d085e1fc-6856-4c5d-89ec-695fa1c11e41"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""915339d2-31fa-4dfe-9725-ef18b30286c2"",
                    ""path"": ""<Keyboard>/1"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""NorthSlot"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""76eb3f59-47c4-49a3-9c46-7e5be001ef17"",
                    ""path"": ""<Gamepad>/dpad/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""NorthSlot"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ee5d8610-2688-4a79-b01e-b22c15394878"",
                    ""path"": ""<Keyboard>/2"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""EastSlot"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""689b500a-ed77-435a-b5b2-92bf6db8a463"",
                    ""path"": ""<Gamepad>/dpad/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""EastSlot"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3c9ca54c-fafc-4620-b627-4821d668a4d8"",
                    ""path"": ""<Keyboard>/4"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SouthSlot"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""76d43253-c69b-4e58-a6d9-98d8441696ae"",
                    ""path"": ""<Gamepad>/dpad/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SouthSlot"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""544bff7a-788b-4e6a-85dc-edb1dd285ef4"",
                    ""path"": ""<Keyboard>/3"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""WestSlot"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4cb77d0d-b9e7-4d50-8bdd-65f333617a10"",
                    ""path"": ""<Gamepad>/dpad/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""WestSlot"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e5b02218-51f6-40a0-bd4a-4b91b3dfe8f4"",
                    ""path"": ""<Keyboard>/tab"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Inventory"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9c63074e-f217-44ac-8b40-0eeefe7171fb"",
                    ""path"": ""<Gamepad>/select"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Inventory"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""51e5acf8-922c-4646-a7ec-54da3b077e0a"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Use_InInventory"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d9cc4d2c-7384-4b8a-8a4c-14bdff20a8c7"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Remove_InInventory"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""009b3503-ecb6-43bc-8b81-09e8263de057"",
                    ""path"": ""<Keyboard>/f"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Swap_InInventory"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5f98ce95-d82d-4107-b443-05e3fac5165a"",
                    ""path"": ""<Keyboard>/1"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""NorthSlotAsignment"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""08234728-1d5e-4729-a9b3-2d3dd99639f9"",
                    ""path"": ""<Gamepad>/dpad/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""NorthSlotAsignment"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d7653f72-d067-419f-9be9-80478f71d8ba"",
                    ""path"": ""<Keyboard>/2"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""EastSlotAsignment"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d8d694f0-75b0-4a62-994a-1c4f565b13ef"",
                    ""path"": ""<Gamepad>/dpad/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""EastSlotAsignment"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0e3e7e2c-f615-4135-b9fc-3ca4ac6a4e3b"",
                    ""path"": ""<Keyboard>/3"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""WestSlotAsignment"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0d3947fb-930a-4611-9db4-a2136f727a5a"",
                    ""path"": ""<Gamepad>/dpad/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""WestSlotAsignment"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c149ea04-60ed-40a5-86e0-c913157ccb49"",
                    ""path"": ""<Keyboard>/4"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SouthSlotAsignment"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8afa30b1-5547-4d3e-aef2-8eb2b872b566"",
                    ""path"": ""<Gamepad>/dpad/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SouthSlotAsignment"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // OnFoot
        m_OnFoot = asset.FindActionMap("OnFoot", throwIfNotFound: true);
        m_OnFoot_Look = m_OnFoot.FindAction("Look", throwIfNotFound: true);
        m_OnFoot_Movement = m_OnFoot.FindAction("Movement", throwIfNotFound: true);
        m_OnFoot_Jump = m_OnFoot.FindAction("Jump", throwIfNotFound: true);
        m_OnFoot_KnockDown = m_OnFoot.FindAction("KnockDown", throwIfNotFound: true);
        m_OnFoot_CrouchHold = m_OnFoot.FindAction("CrouchHold", throwIfNotFound: true);
        m_OnFoot_Slide = m_OnFoot.FindAction("Slide", throwIfNotFound: true);
        m_OnFoot_Interact = m_OnFoot.FindAction("Interact", throwIfNotFound: true);
        m_OnFoot_Melee = m_OnFoot.FindAction("Melee", throwIfNotFound: true);
        m_OnFoot_ActivateUltimate = m_OnFoot.FindAction("ActivateUltimate", throwIfNotFound: true);
        // UltimateMode
        m_UltimateMode = asset.FindActionMap("UltimateMode", throwIfNotFound: true);
        m_UltimateMode_Movement = m_UltimateMode.FindAction("Movement", throwIfNotFound: true);
        m_UltimateMode_Look = m_UltimateMode.FindAction("Look", throwIfNotFound: true);
        m_UltimateMode_Jump = m_UltimateMode.FindAction("Jump", throwIfNotFound: true);
        m_UltimateMode_KnockDown = m_UltimateMode.FindAction("KnockDown", throwIfNotFound: true);
        m_UltimateMode_Slide = m_UltimateMode.FindAction("Slide", throwIfNotFound: true);
        m_UltimateMode_CrouchHold = m_UltimateMode.FindAction("CrouchHold", throwIfNotFound: true);
        m_UltimateMode_DectivateUltimate = m_UltimateMode.FindAction("DectivateUltimate", throwIfNotFound: true);
        m_UltimateMode_HorizontalHit = m_UltimateMode.FindAction("HorizontalHit", throwIfNotFound: true);
        m_UltimateMode_VerticalHit = m_UltimateMode.FindAction("VerticalHit", throwIfNotFound: true);
        m_UltimateMode_ShieldUp = m_UltimateMode.FindAction("ShieldUp", throwIfNotFound: true);
        // Gun
        m_Gun = asset.FindActionMap("Gun", throwIfNotFound: true);
        m_Gun_Fire = m_Gun.FindAction("Fire", throwIfNotFound: true);
        m_Gun_SpecialFire = m_Gun.FindAction("SpecialFire", throwIfNotFound: true);
        m_Gun_Reload = m_Gun.FindAction("Reload", throwIfNotFound: true);
        m_Gun_Overview = m_Gun.FindAction("Overview", throwIfNotFound: true);
        // ItemManipulation
        m_ItemManipulation = asset.FindActionMap("ItemManipulation", throwIfNotFound: true);
        m_ItemManipulation_NorthSlot = m_ItemManipulation.FindAction("NorthSlot", throwIfNotFound: true);
        m_ItemManipulation_NorthSlotAsignment = m_ItemManipulation.FindAction("NorthSlotAsignment", throwIfNotFound: true);
        m_ItemManipulation_EastSlot = m_ItemManipulation.FindAction("EastSlot", throwIfNotFound: true);
        m_ItemManipulation_EastSlotAsignment = m_ItemManipulation.FindAction("EastSlotAsignment", throwIfNotFound: true);
        m_ItemManipulation_WestSlot = m_ItemManipulation.FindAction("WestSlot", throwIfNotFound: true);
        m_ItemManipulation_WestSlotAsignment = m_ItemManipulation.FindAction("WestSlotAsignment", throwIfNotFound: true);
        m_ItemManipulation_SouthSlot = m_ItemManipulation.FindAction("SouthSlot", throwIfNotFound: true);
        m_ItemManipulation_SouthSlotAsignment = m_ItemManipulation.FindAction("SouthSlotAsignment", throwIfNotFound: true);
        m_ItemManipulation_Inventory = m_ItemManipulation.FindAction("Inventory", throwIfNotFound: true);
        m_ItemManipulation_Use_InInventory = m_ItemManipulation.FindAction("Use_InInventory", throwIfNotFound: true);
        m_ItemManipulation_Remove_InInventory = m_ItemManipulation.FindAction("Remove_InInventory", throwIfNotFound: true);
        m_ItemManipulation_Swap_InInventory = m_ItemManipulation.FindAction("Swap_InInventory", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // OnFoot
    private readonly InputActionMap m_OnFoot;
    private IOnFootActions m_OnFootActionsCallbackInterface;
    private readonly InputAction m_OnFoot_Look;
    private readonly InputAction m_OnFoot_Movement;
    private readonly InputAction m_OnFoot_Jump;
    private readonly InputAction m_OnFoot_KnockDown;
    private readonly InputAction m_OnFoot_CrouchHold;
    private readonly InputAction m_OnFoot_Slide;
    private readonly InputAction m_OnFoot_Interact;
    private readonly InputAction m_OnFoot_Melee;
    private readonly InputAction m_OnFoot_ActivateUltimate;
    public struct OnFootActions
    {
        private @PlayerInputs m_Wrapper;
        public OnFootActions(@PlayerInputs wrapper) { m_Wrapper = wrapper; }
        public InputAction @Look => m_Wrapper.m_OnFoot_Look;
        public InputAction @Movement => m_Wrapper.m_OnFoot_Movement;
        public InputAction @Jump => m_Wrapper.m_OnFoot_Jump;
        public InputAction @KnockDown => m_Wrapper.m_OnFoot_KnockDown;
        public InputAction @CrouchHold => m_Wrapper.m_OnFoot_CrouchHold;
        public InputAction @Slide => m_Wrapper.m_OnFoot_Slide;
        public InputAction @Interact => m_Wrapper.m_OnFoot_Interact;
        public InputAction @Melee => m_Wrapper.m_OnFoot_Melee;
        public InputAction @ActivateUltimate => m_Wrapper.m_OnFoot_ActivateUltimate;
        public InputActionMap Get() { return m_Wrapper.m_OnFoot; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(OnFootActions set) { return set.Get(); }
        public void SetCallbacks(IOnFootActions instance)
        {
            if (m_Wrapper.m_OnFootActionsCallbackInterface != null)
            {
                @Look.started -= m_Wrapper.m_OnFootActionsCallbackInterface.OnLook;
                @Look.performed -= m_Wrapper.m_OnFootActionsCallbackInterface.OnLook;
                @Look.canceled -= m_Wrapper.m_OnFootActionsCallbackInterface.OnLook;
                @Movement.started -= m_Wrapper.m_OnFootActionsCallbackInterface.OnMovement;
                @Movement.performed -= m_Wrapper.m_OnFootActionsCallbackInterface.OnMovement;
                @Movement.canceled -= m_Wrapper.m_OnFootActionsCallbackInterface.OnMovement;
                @Jump.started -= m_Wrapper.m_OnFootActionsCallbackInterface.OnJump;
                @Jump.performed -= m_Wrapper.m_OnFootActionsCallbackInterface.OnJump;
                @Jump.canceled -= m_Wrapper.m_OnFootActionsCallbackInterface.OnJump;
                @KnockDown.started -= m_Wrapper.m_OnFootActionsCallbackInterface.OnKnockDown;
                @KnockDown.performed -= m_Wrapper.m_OnFootActionsCallbackInterface.OnKnockDown;
                @KnockDown.canceled -= m_Wrapper.m_OnFootActionsCallbackInterface.OnKnockDown;
                @CrouchHold.started -= m_Wrapper.m_OnFootActionsCallbackInterface.OnCrouchHold;
                @CrouchHold.performed -= m_Wrapper.m_OnFootActionsCallbackInterface.OnCrouchHold;
                @CrouchHold.canceled -= m_Wrapper.m_OnFootActionsCallbackInterface.OnCrouchHold;
                @Slide.started -= m_Wrapper.m_OnFootActionsCallbackInterface.OnSlide;
                @Slide.performed -= m_Wrapper.m_OnFootActionsCallbackInterface.OnSlide;
                @Slide.canceled -= m_Wrapper.m_OnFootActionsCallbackInterface.OnSlide;
                @Interact.started -= m_Wrapper.m_OnFootActionsCallbackInterface.OnInteract;
                @Interact.performed -= m_Wrapper.m_OnFootActionsCallbackInterface.OnInteract;
                @Interact.canceled -= m_Wrapper.m_OnFootActionsCallbackInterface.OnInteract;
                @Melee.started -= m_Wrapper.m_OnFootActionsCallbackInterface.OnMelee;
                @Melee.performed -= m_Wrapper.m_OnFootActionsCallbackInterface.OnMelee;
                @Melee.canceled -= m_Wrapper.m_OnFootActionsCallbackInterface.OnMelee;
                @ActivateUltimate.started -= m_Wrapper.m_OnFootActionsCallbackInterface.OnActivateUltimate;
                @ActivateUltimate.performed -= m_Wrapper.m_OnFootActionsCallbackInterface.OnActivateUltimate;
                @ActivateUltimate.canceled -= m_Wrapper.m_OnFootActionsCallbackInterface.OnActivateUltimate;
            }
            m_Wrapper.m_OnFootActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Look.started += instance.OnLook;
                @Look.performed += instance.OnLook;
                @Look.canceled += instance.OnLook;
                @Movement.started += instance.OnMovement;
                @Movement.performed += instance.OnMovement;
                @Movement.canceled += instance.OnMovement;
                @Jump.started += instance.OnJump;
                @Jump.performed += instance.OnJump;
                @Jump.canceled += instance.OnJump;
                @KnockDown.started += instance.OnKnockDown;
                @KnockDown.performed += instance.OnKnockDown;
                @KnockDown.canceled += instance.OnKnockDown;
                @CrouchHold.started += instance.OnCrouchHold;
                @CrouchHold.performed += instance.OnCrouchHold;
                @CrouchHold.canceled += instance.OnCrouchHold;
                @Slide.started += instance.OnSlide;
                @Slide.performed += instance.OnSlide;
                @Slide.canceled += instance.OnSlide;
                @Interact.started += instance.OnInteract;
                @Interact.performed += instance.OnInteract;
                @Interact.canceled += instance.OnInteract;
                @Melee.started += instance.OnMelee;
                @Melee.performed += instance.OnMelee;
                @Melee.canceled += instance.OnMelee;
                @ActivateUltimate.started += instance.OnActivateUltimate;
                @ActivateUltimate.performed += instance.OnActivateUltimate;
                @ActivateUltimate.canceled += instance.OnActivateUltimate;
            }
        }
    }
    public OnFootActions @OnFoot => new OnFootActions(this);

    // UltimateMode
    private readonly InputActionMap m_UltimateMode;
    private IUltimateModeActions m_UltimateModeActionsCallbackInterface;
    private readonly InputAction m_UltimateMode_Movement;
    private readonly InputAction m_UltimateMode_Look;
    private readonly InputAction m_UltimateMode_Jump;
    private readonly InputAction m_UltimateMode_KnockDown;
    private readonly InputAction m_UltimateMode_Slide;
    private readonly InputAction m_UltimateMode_CrouchHold;
    private readonly InputAction m_UltimateMode_DectivateUltimate;
    private readonly InputAction m_UltimateMode_HorizontalHit;
    private readonly InputAction m_UltimateMode_VerticalHit;
    private readonly InputAction m_UltimateMode_ShieldUp;
    public struct UltimateModeActions
    {
        private @PlayerInputs m_Wrapper;
        public UltimateModeActions(@PlayerInputs wrapper) { m_Wrapper = wrapper; }
        public InputAction @Movement => m_Wrapper.m_UltimateMode_Movement;
        public InputAction @Look => m_Wrapper.m_UltimateMode_Look;
        public InputAction @Jump => m_Wrapper.m_UltimateMode_Jump;
        public InputAction @KnockDown => m_Wrapper.m_UltimateMode_KnockDown;
        public InputAction @Slide => m_Wrapper.m_UltimateMode_Slide;
        public InputAction @CrouchHold => m_Wrapper.m_UltimateMode_CrouchHold;
        public InputAction @DectivateUltimate => m_Wrapper.m_UltimateMode_DectivateUltimate;
        public InputAction @HorizontalHit => m_Wrapper.m_UltimateMode_HorizontalHit;
        public InputAction @VerticalHit => m_Wrapper.m_UltimateMode_VerticalHit;
        public InputAction @ShieldUp => m_Wrapper.m_UltimateMode_ShieldUp;
        public InputActionMap Get() { return m_Wrapper.m_UltimateMode; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(UltimateModeActions set) { return set.Get(); }
        public void SetCallbacks(IUltimateModeActions instance)
        {
            if (m_Wrapper.m_UltimateModeActionsCallbackInterface != null)
            {
                @Movement.started -= m_Wrapper.m_UltimateModeActionsCallbackInterface.OnMovement;
                @Movement.performed -= m_Wrapper.m_UltimateModeActionsCallbackInterface.OnMovement;
                @Movement.canceled -= m_Wrapper.m_UltimateModeActionsCallbackInterface.OnMovement;
                @Look.started -= m_Wrapper.m_UltimateModeActionsCallbackInterface.OnLook;
                @Look.performed -= m_Wrapper.m_UltimateModeActionsCallbackInterface.OnLook;
                @Look.canceled -= m_Wrapper.m_UltimateModeActionsCallbackInterface.OnLook;
                @Jump.started -= m_Wrapper.m_UltimateModeActionsCallbackInterface.OnJump;
                @Jump.performed -= m_Wrapper.m_UltimateModeActionsCallbackInterface.OnJump;
                @Jump.canceled -= m_Wrapper.m_UltimateModeActionsCallbackInterface.OnJump;
                @KnockDown.started -= m_Wrapper.m_UltimateModeActionsCallbackInterface.OnKnockDown;
                @KnockDown.performed -= m_Wrapper.m_UltimateModeActionsCallbackInterface.OnKnockDown;
                @KnockDown.canceled -= m_Wrapper.m_UltimateModeActionsCallbackInterface.OnKnockDown;
                @Slide.started -= m_Wrapper.m_UltimateModeActionsCallbackInterface.OnSlide;
                @Slide.performed -= m_Wrapper.m_UltimateModeActionsCallbackInterface.OnSlide;
                @Slide.canceled -= m_Wrapper.m_UltimateModeActionsCallbackInterface.OnSlide;
                @CrouchHold.started -= m_Wrapper.m_UltimateModeActionsCallbackInterface.OnCrouchHold;
                @CrouchHold.performed -= m_Wrapper.m_UltimateModeActionsCallbackInterface.OnCrouchHold;
                @CrouchHold.canceled -= m_Wrapper.m_UltimateModeActionsCallbackInterface.OnCrouchHold;
                @DectivateUltimate.started -= m_Wrapper.m_UltimateModeActionsCallbackInterface.OnDectivateUltimate;
                @DectivateUltimate.performed -= m_Wrapper.m_UltimateModeActionsCallbackInterface.OnDectivateUltimate;
                @DectivateUltimate.canceled -= m_Wrapper.m_UltimateModeActionsCallbackInterface.OnDectivateUltimate;
                @HorizontalHit.started -= m_Wrapper.m_UltimateModeActionsCallbackInterface.OnHorizontalHit;
                @HorizontalHit.performed -= m_Wrapper.m_UltimateModeActionsCallbackInterface.OnHorizontalHit;
                @HorizontalHit.canceled -= m_Wrapper.m_UltimateModeActionsCallbackInterface.OnHorizontalHit;
                @VerticalHit.started -= m_Wrapper.m_UltimateModeActionsCallbackInterface.OnVerticalHit;
                @VerticalHit.performed -= m_Wrapper.m_UltimateModeActionsCallbackInterface.OnVerticalHit;
                @VerticalHit.canceled -= m_Wrapper.m_UltimateModeActionsCallbackInterface.OnVerticalHit;
                @ShieldUp.started -= m_Wrapper.m_UltimateModeActionsCallbackInterface.OnShieldUp;
                @ShieldUp.performed -= m_Wrapper.m_UltimateModeActionsCallbackInterface.OnShieldUp;
                @ShieldUp.canceled -= m_Wrapper.m_UltimateModeActionsCallbackInterface.OnShieldUp;
            }
            m_Wrapper.m_UltimateModeActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Movement.started += instance.OnMovement;
                @Movement.performed += instance.OnMovement;
                @Movement.canceled += instance.OnMovement;
                @Look.started += instance.OnLook;
                @Look.performed += instance.OnLook;
                @Look.canceled += instance.OnLook;
                @Jump.started += instance.OnJump;
                @Jump.performed += instance.OnJump;
                @Jump.canceled += instance.OnJump;
                @KnockDown.started += instance.OnKnockDown;
                @KnockDown.performed += instance.OnKnockDown;
                @KnockDown.canceled += instance.OnKnockDown;
                @Slide.started += instance.OnSlide;
                @Slide.performed += instance.OnSlide;
                @Slide.canceled += instance.OnSlide;
                @CrouchHold.started += instance.OnCrouchHold;
                @CrouchHold.performed += instance.OnCrouchHold;
                @CrouchHold.canceled += instance.OnCrouchHold;
                @DectivateUltimate.started += instance.OnDectivateUltimate;
                @DectivateUltimate.performed += instance.OnDectivateUltimate;
                @DectivateUltimate.canceled += instance.OnDectivateUltimate;
                @HorizontalHit.started += instance.OnHorizontalHit;
                @HorizontalHit.performed += instance.OnHorizontalHit;
                @HorizontalHit.canceled += instance.OnHorizontalHit;
                @VerticalHit.started += instance.OnVerticalHit;
                @VerticalHit.performed += instance.OnVerticalHit;
                @VerticalHit.canceled += instance.OnVerticalHit;
                @ShieldUp.started += instance.OnShieldUp;
                @ShieldUp.performed += instance.OnShieldUp;
                @ShieldUp.canceled += instance.OnShieldUp;
            }
        }
    }
    public UltimateModeActions @UltimateMode => new UltimateModeActions(this);

    // Gun
    private readonly InputActionMap m_Gun;
    private IGunActions m_GunActionsCallbackInterface;
    private readonly InputAction m_Gun_Fire;
    private readonly InputAction m_Gun_SpecialFire;
    private readonly InputAction m_Gun_Reload;
    private readonly InputAction m_Gun_Overview;
    public struct GunActions
    {
        private @PlayerInputs m_Wrapper;
        public GunActions(@PlayerInputs wrapper) { m_Wrapper = wrapper; }
        public InputAction @Fire => m_Wrapper.m_Gun_Fire;
        public InputAction @SpecialFire => m_Wrapper.m_Gun_SpecialFire;
        public InputAction @Reload => m_Wrapper.m_Gun_Reload;
        public InputAction @Overview => m_Wrapper.m_Gun_Overview;
        public InputActionMap Get() { return m_Wrapper.m_Gun; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(GunActions set) { return set.Get(); }
        public void SetCallbacks(IGunActions instance)
        {
            if (m_Wrapper.m_GunActionsCallbackInterface != null)
            {
                @Fire.started -= m_Wrapper.m_GunActionsCallbackInterface.OnFire;
                @Fire.performed -= m_Wrapper.m_GunActionsCallbackInterface.OnFire;
                @Fire.canceled -= m_Wrapper.m_GunActionsCallbackInterface.OnFire;
                @SpecialFire.started -= m_Wrapper.m_GunActionsCallbackInterface.OnSpecialFire;
                @SpecialFire.performed -= m_Wrapper.m_GunActionsCallbackInterface.OnSpecialFire;
                @SpecialFire.canceled -= m_Wrapper.m_GunActionsCallbackInterface.OnSpecialFire;
                @Reload.started -= m_Wrapper.m_GunActionsCallbackInterface.OnReload;
                @Reload.performed -= m_Wrapper.m_GunActionsCallbackInterface.OnReload;
                @Reload.canceled -= m_Wrapper.m_GunActionsCallbackInterface.OnReload;
                @Overview.started -= m_Wrapper.m_GunActionsCallbackInterface.OnOverview;
                @Overview.performed -= m_Wrapper.m_GunActionsCallbackInterface.OnOverview;
                @Overview.canceled -= m_Wrapper.m_GunActionsCallbackInterface.OnOverview;
            }
            m_Wrapper.m_GunActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Fire.started += instance.OnFire;
                @Fire.performed += instance.OnFire;
                @Fire.canceled += instance.OnFire;
                @SpecialFire.started += instance.OnSpecialFire;
                @SpecialFire.performed += instance.OnSpecialFire;
                @SpecialFire.canceled += instance.OnSpecialFire;
                @Reload.started += instance.OnReload;
                @Reload.performed += instance.OnReload;
                @Reload.canceled += instance.OnReload;
                @Overview.started += instance.OnOverview;
                @Overview.performed += instance.OnOverview;
                @Overview.canceled += instance.OnOverview;
            }
        }
    }
    public GunActions @Gun => new GunActions(this);

    // ItemManipulation
    private readonly InputActionMap m_ItemManipulation;
    private IItemManipulationActions m_ItemManipulationActionsCallbackInterface;
    private readonly InputAction m_ItemManipulation_NorthSlot;
    private readonly InputAction m_ItemManipulation_NorthSlotAsignment;
    private readonly InputAction m_ItemManipulation_EastSlot;
    private readonly InputAction m_ItemManipulation_EastSlotAsignment;
    private readonly InputAction m_ItemManipulation_WestSlot;
    private readonly InputAction m_ItemManipulation_WestSlotAsignment;
    private readonly InputAction m_ItemManipulation_SouthSlot;
    private readonly InputAction m_ItemManipulation_SouthSlotAsignment;
    private readonly InputAction m_ItemManipulation_Inventory;
    private readonly InputAction m_ItemManipulation_Use_InInventory;
    private readonly InputAction m_ItemManipulation_Remove_InInventory;
    private readonly InputAction m_ItemManipulation_Swap_InInventory;
    public struct ItemManipulationActions
    {
        private @PlayerInputs m_Wrapper;
        public ItemManipulationActions(@PlayerInputs wrapper) { m_Wrapper = wrapper; }
        public InputAction @NorthSlot => m_Wrapper.m_ItemManipulation_NorthSlot;
        public InputAction @NorthSlotAsignment => m_Wrapper.m_ItemManipulation_NorthSlotAsignment;
        public InputAction @EastSlot => m_Wrapper.m_ItemManipulation_EastSlot;
        public InputAction @EastSlotAsignment => m_Wrapper.m_ItemManipulation_EastSlotAsignment;
        public InputAction @WestSlot => m_Wrapper.m_ItemManipulation_WestSlot;
        public InputAction @WestSlotAsignment => m_Wrapper.m_ItemManipulation_WestSlotAsignment;
        public InputAction @SouthSlot => m_Wrapper.m_ItemManipulation_SouthSlot;
        public InputAction @SouthSlotAsignment => m_Wrapper.m_ItemManipulation_SouthSlotAsignment;
        public InputAction @Inventory => m_Wrapper.m_ItemManipulation_Inventory;
        public InputAction @Use_InInventory => m_Wrapper.m_ItemManipulation_Use_InInventory;
        public InputAction @Remove_InInventory => m_Wrapper.m_ItemManipulation_Remove_InInventory;
        public InputAction @Swap_InInventory => m_Wrapper.m_ItemManipulation_Swap_InInventory;
        public InputActionMap Get() { return m_Wrapper.m_ItemManipulation; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(ItemManipulationActions set) { return set.Get(); }
        public void SetCallbacks(IItemManipulationActions instance)
        {
            if (m_Wrapper.m_ItemManipulationActionsCallbackInterface != null)
            {
                @NorthSlot.started -= m_Wrapper.m_ItemManipulationActionsCallbackInterface.OnNorthSlot;
                @NorthSlot.performed -= m_Wrapper.m_ItemManipulationActionsCallbackInterface.OnNorthSlot;
                @NorthSlot.canceled -= m_Wrapper.m_ItemManipulationActionsCallbackInterface.OnNorthSlot;
                @NorthSlotAsignment.started -= m_Wrapper.m_ItemManipulationActionsCallbackInterface.OnNorthSlotAsignment;
                @NorthSlotAsignment.performed -= m_Wrapper.m_ItemManipulationActionsCallbackInterface.OnNorthSlotAsignment;
                @NorthSlotAsignment.canceled -= m_Wrapper.m_ItemManipulationActionsCallbackInterface.OnNorthSlotAsignment;
                @EastSlot.started -= m_Wrapper.m_ItemManipulationActionsCallbackInterface.OnEastSlot;
                @EastSlot.performed -= m_Wrapper.m_ItemManipulationActionsCallbackInterface.OnEastSlot;
                @EastSlot.canceled -= m_Wrapper.m_ItemManipulationActionsCallbackInterface.OnEastSlot;
                @EastSlotAsignment.started -= m_Wrapper.m_ItemManipulationActionsCallbackInterface.OnEastSlotAsignment;
                @EastSlotAsignment.performed -= m_Wrapper.m_ItemManipulationActionsCallbackInterface.OnEastSlotAsignment;
                @EastSlotAsignment.canceled -= m_Wrapper.m_ItemManipulationActionsCallbackInterface.OnEastSlotAsignment;
                @WestSlot.started -= m_Wrapper.m_ItemManipulationActionsCallbackInterface.OnWestSlot;
                @WestSlot.performed -= m_Wrapper.m_ItemManipulationActionsCallbackInterface.OnWestSlot;
                @WestSlot.canceled -= m_Wrapper.m_ItemManipulationActionsCallbackInterface.OnWestSlot;
                @WestSlotAsignment.started -= m_Wrapper.m_ItemManipulationActionsCallbackInterface.OnWestSlotAsignment;
                @WestSlotAsignment.performed -= m_Wrapper.m_ItemManipulationActionsCallbackInterface.OnWestSlotAsignment;
                @WestSlotAsignment.canceled -= m_Wrapper.m_ItemManipulationActionsCallbackInterface.OnWestSlotAsignment;
                @SouthSlot.started -= m_Wrapper.m_ItemManipulationActionsCallbackInterface.OnSouthSlot;
                @SouthSlot.performed -= m_Wrapper.m_ItemManipulationActionsCallbackInterface.OnSouthSlot;
                @SouthSlot.canceled -= m_Wrapper.m_ItemManipulationActionsCallbackInterface.OnSouthSlot;
                @SouthSlotAsignment.started -= m_Wrapper.m_ItemManipulationActionsCallbackInterface.OnSouthSlotAsignment;
                @SouthSlotAsignment.performed -= m_Wrapper.m_ItemManipulationActionsCallbackInterface.OnSouthSlotAsignment;
                @SouthSlotAsignment.canceled -= m_Wrapper.m_ItemManipulationActionsCallbackInterface.OnSouthSlotAsignment;
                @Inventory.started -= m_Wrapper.m_ItemManipulationActionsCallbackInterface.OnInventory;
                @Inventory.performed -= m_Wrapper.m_ItemManipulationActionsCallbackInterface.OnInventory;
                @Inventory.canceled -= m_Wrapper.m_ItemManipulationActionsCallbackInterface.OnInventory;
                @Use_InInventory.started -= m_Wrapper.m_ItemManipulationActionsCallbackInterface.OnUse_InInventory;
                @Use_InInventory.performed -= m_Wrapper.m_ItemManipulationActionsCallbackInterface.OnUse_InInventory;
                @Use_InInventory.canceled -= m_Wrapper.m_ItemManipulationActionsCallbackInterface.OnUse_InInventory;
                @Remove_InInventory.started -= m_Wrapper.m_ItemManipulationActionsCallbackInterface.OnRemove_InInventory;
                @Remove_InInventory.performed -= m_Wrapper.m_ItemManipulationActionsCallbackInterface.OnRemove_InInventory;
                @Remove_InInventory.canceled -= m_Wrapper.m_ItemManipulationActionsCallbackInterface.OnRemove_InInventory;
                @Swap_InInventory.started -= m_Wrapper.m_ItemManipulationActionsCallbackInterface.OnSwap_InInventory;
                @Swap_InInventory.performed -= m_Wrapper.m_ItemManipulationActionsCallbackInterface.OnSwap_InInventory;
                @Swap_InInventory.canceled -= m_Wrapper.m_ItemManipulationActionsCallbackInterface.OnSwap_InInventory;
            }
            m_Wrapper.m_ItemManipulationActionsCallbackInterface = instance;
            if (instance != null)
            {
                @NorthSlot.started += instance.OnNorthSlot;
                @NorthSlot.performed += instance.OnNorthSlot;
                @NorthSlot.canceled += instance.OnNorthSlot;
                @NorthSlotAsignment.started += instance.OnNorthSlotAsignment;
                @NorthSlotAsignment.performed += instance.OnNorthSlotAsignment;
                @NorthSlotAsignment.canceled += instance.OnNorthSlotAsignment;
                @EastSlot.started += instance.OnEastSlot;
                @EastSlot.performed += instance.OnEastSlot;
                @EastSlot.canceled += instance.OnEastSlot;
                @EastSlotAsignment.started += instance.OnEastSlotAsignment;
                @EastSlotAsignment.performed += instance.OnEastSlotAsignment;
                @EastSlotAsignment.canceled += instance.OnEastSlotAsignment;
                @WestSlot.started += instance.OnWestSlot;
                @WestSlot.performed += instance.OnWestSlot;
                @WestSlot.canceled += instance.OnWestSlot;
                @WestSlotAsignment.started += instance.OnWestSlotAsignment;
                @WestSlotAsignment.performed += instance.OnWestSlotAsignment;
                @WestSlotAsignment.canceled += instance.OnWestSlotAsignment;
                @SouthSlot.started += instance.OnSouthSlot;
                @SouthSlot.performed += instance.OnSouthSlot;
                @SouthSlot.canceled += instance.OnSouthSlot;
                @SouthSlotAsignment.started += instance.OnSouthSlotAsignment;
                @SouthSlotAsignment.performed += instance.OnSouthSlotAsignment;
                @SouthSlotAsignment.canceled += instance.OnSouthSlotAsignment;
                @Inventory.started += instance.OnInventory;
                @Inventory.performed += instance.OnInventory;
                @Inventory.canceled += instance.OnInventory;
                @Use_InInventory.started += instance.OnUse_InInventory;
                @Use_InInventory.performed += instance.OnUse_InInventory;
                @Use_InInventory.canceled += instance.OnUse_InInventory;
                @Remove_InInventory.started += instance.OnRemove_InInventory;
                @Remove_InInventory.performed += instance.OnRemove_InInventory;
                @Remove_InInventory.canceled += instance.OnRemove_InInventory;
                @Swap_InInventory.started += instance.OnSwap_InInventory;
                @Swap_InInventory.performed += instance.OnSwap_InInventory;
                @Swap_InInventory.canceled += instance.OnSwap_InInventory;
            }
        }
    }
    public ItemManipulationActions @ItemManipulation => new ItemManipulationActions(this);
    public interface IOnFootActions
    {
        void OnLook(InputAction.CallbackContext context);
        void OnMovement(InputAction.CallbackContext context);
        void OnJump(InputAction.CallbackContext context);
        void OnKnockDown(InputAction.CallbackContext context);
        void OnCrouchHold(InputAction.CallbackContext context);
        void OnSlide(InputAction.CallbackContext context);
        void OnInteract(InputAction.CallbackContext context);
        void OnMelee(InputAction.CallbackContext context);
        void OnActivateUltimate(InputAction.CallbackContext context);
    }
    public interface IUltimateModeActions
    {
        void OnMovement(InputAction.CallbackContext context);
        void OnLook(InputAction.CallbackContext context);
        void OnJump(InputAction.CallbackContext context);
        void OnKnockDown(InputAction.CallbackContext context);
        void OnSlide(InputAction.CallbackContext context);
        void OnCrouchHold(InputAction.CallbackContext context);
        void OnDectivateUltimate(InputAction.CallbackContext context);
        void OnHorizontalHit(InputAction.CallbackContext context);
        void OnVerticalHit(InputAction.CallbackContext context);
        void OnShieldUp(InputAction.CallbackContext context);
    }
    public interface IGunActions
    {
        void OnFire(InputAction.CallbackContext context);
        void OnSpecialFire(InputAction.CallbackContext context);
        void OnReload(InputAction.CallbackContext context);
        void OnOverview(InputAction.CallbackContext context);
    }
    public interface IItemManipulationActions
    {
        void OnNorthSlot(InputAction.CallbackContext context);
        void OnNorthSlotAsignment(InputAction.CallbackContext context);
        void OnEastSlot(InputAction.CallbackContext context);
        void OnEastSlotAsignment(InputAction.CallbackContext context);
        void OnWestSlot(InputAction.CallbackContext context);
        void OnWestSlotAsignment(InputAction.CallbackContext context);
        void OnSouthSlot(InputAction.CallbackContext context);
        void OnSouthSlotAsignment(InputAction.CallbackContext context);
        void OnInventory(InputAction.CallbackContext context);
        void OnUse_InInventory(InputAction.CallbackContext context);
        void OnRemove_InInventory(InputAction.CallbackContext context);
        void OnSwap_InInventory(InputAction.CallbackContext context);
    }
}
